import random

#Defining the Character class and sub function: roll_dice, attack
class Character:
    def __init__(self, name, health, armor_class, attack_bonus, damage_dice):
        self.name = name
        self.health = health
        self.armor_class = armor_class
        self.attack_bonus = attack_bonus
        self.damage_dice = damage_dice

    def roll_dice(self, dice_string):
        num_dice, die_size = map(int, dice_string.split('d'))
        total_damage = sum(random.randint(1, die_size) for _ in range(num_dice))
        return total_damage

    def attack(self, enemy):
        attack_roll = random.randint(1, 20) + self.attack_bonus
        print(f'{self.name} attacks {enemy.name} (Attack Roll: {attack_roll})')

        if attack_roll >= enemy.armor_class:
            damage = self.roll_dice(self.damage_dice)
            enemy.health -= damage
            print(f'💥 {self.name} hits {enemy.name} for {damage} damage! {enemy.name} health: {enemy.health}')
        else: 
            print(f'❌ {self.name} misses {enemy.name}.')

# Game setup data

enemies = {
    "Goblin": Character("Goblin", 20, 13, 3, "1d6"),
    "Orc": Character("Orc", 35, 13, 4, "1d10"),
    "Skeleton": Character("Skeleton", 25, 12, 2, "1d8"),
    "Bandit": Character("Bandit", 30, 14, 3, "1d8")
}

weapons = {
    "Sword": {"damage": "1d8", "bonus": 5},
    "Axe": {"damage": "1d10", "bonus": 4},
    "Dagger": {"damage": "1d4", "bonus": 6},
}

spells = {
    "Firebolt": {"damage": "1d10", "bonus": 5}, 
    "Ice Spike": {"damage": "2d4", "bonus": 4}, 
    "Magic Missile": {"damage": "3d4", "bonus": 3}, 
}


# Functions for setup

def create_player():
    print("\n--- Character  Creation ---")
    name = input("Enter your character's name: ")
    health = int(input("Enter your character's health (e.g., 40): "))
    armor_class = int(input("Enter your character's armor class (e.g., 15): "))

    print("\nChoose your weapon: ")
    for i, weapon in enumerate(weapons.keys(), start=1):
        print(f"{i}. {weapon}")
    weapon_choice = list(weapons.keys())[int(input("> ")) - 1]

    for i, spell in enumerate(spells.keys(), start = 1):
        print(f"{i}. {spell}")
    spell_choice = list(spells.keys())[int(input("> ")) - 1]

    attack_bonus = weapons[weapon_choice]["bonus"]
    damage_dice = weapons[weapon_choice]["damage"]

    print(f"\n{name} is armed with a {weapon_choice} and knows {spell_choice}!")
    return Character(name, health, armor_class, attack_bonus, damage_dice)

def choose_enemy():
    print("\n--- Choose Your Enemy ---")
    for i, name in enumerate(enemies.keys(), start = 1):
        print(f"{i}. {name}")
    choice = int(input("> ")) -  1
    enemy_name = list(enemies.keys())[choice]
    enemy = enemies[enemy_name]
    return Character(enemy.name, enemy.health, enemy.armor_class, enemy.attack_bonus, enemy.damage_dice)

#Defining the battle simulator parts
def simulate_battle(player, enemy):
    print(f"\n⚔️ Battle Start! {player.name} vs {enemy.name} ⚔️")
    turn = 1
    while player.health > 0 and enemy.health > 0:
        print(f'\n--- Turn {turn} ---')
        player.attack(enemy)
        if enemy.health <= 0:
            print(f'\n🏆 {enemy.name} has been defeated!')
            break

        enemy.attack(player)
        if player.health <= 0:
            print(f'\n💀 {player.name}  has been defeated!')
            break
        turn += 1
    
    print("\n --- Battle Over ---")
    if player.health > 0: 
        print(f"{player.name} wins with {player.health} HP remaining!")
    else: 
        print(f"{enemy.name} wins with {enemy.health} HP remaining!")

#main

if __name__ == "__main__":
    player = create_player()
    enemy = choose_enemy()
    simulate_battle(player, enemy)


#add list of enemies to choose from
#add a way for you to add your character name and own stats//same for enemy
#adds spells and choose weapons